#%RAML 0.8
---
title: Mixtio
baseUri: http://localhost
version: 1.0

traits:
  - pageable:
      queryParameters:
        page:
          displayName: page
          type: number
          description: The page you want
          example: page=1
          required: false
        page_size:
          displayName: page_size
          type: number
          description: The number of results returned in a page
          example: page_size=10
          required: false
  - sortable:
      queryParameters:
        sort:
          displayName: sort
          type: string
          description: Orders the collection by the field given (either created_at or updated_at). Default is ascending. Put a minus before the value for descending.
          example: |
            sort=created_at
            sort=-updated_at
          required: false

resourceTypes:
  - collection:
      get:
        is: [pageable, sortable]
        description: Get a list of <<resourcePathName>>.
        responses:
          200:
            body:
              application/json:
                example: |
                  <<exampleCollection>>
/batches:
  type:
    collection:
      exampleCollection: |
        {
          "batches": [
            {
              "id": 57,
              "number": "TESTTEAM-57",
              "consumable_type": {
                "id": 24,
                "uri": "http://localhost:3000/api/v1/consumable_types/24"
              },
              "kitchen": {
                "id": 25,
                "type": "Team",
                "name": "TEST TEAM"
              },
              "expiry_date": "2016-08-13",
              "ingredients": [
                {
                  "id": 9,
                  "consumable_type_id": 9,
                  "kitchen_id": 9,
                  "number": "1695274",
                  "expiry_date": null,
                  "created_at": "2016-02-15T13:39:49.770Z",
                  "updated_at": "2016-02-15T13:39:49.770Z"
                },
                {
                  "id": 10,
                  "consumable_type_id": 10,
                  "kitchen_id": 10,
                  "number": "LIMSBATCH1005480",
                  "expiry_date": null,
                  "created_at": "2016-02-15T13:39:49.777Z",
                  "updated_at": "2016-02-15T13:39:49.777Z"
                }
              ],
              "consumables": [
                {
                  "id": 146,
                  "batch_id": 57,
                  "created_at": "2016-02-15T13:39:52.018Z",
                  "updated_at": "2016-02-15T13:39:52.018Z",
                  "name": null,
                  "barcode": "RGNT-146",
                  "depleted": false
                },
                {
                  "id": 147,
                  "batch_id": 57,
                  "created_at": "2016-02-15T13:39:52.026Z",
                  "updated_at": "2016-02-15T13:39:52.026Z",
                  "name": null,
                  "barcode": "RGNT-147",
                  "depleted": false
                }
              ]
            },
            {
              "id": 58,
              "number": "TESTTEAM-58",
              "consumable_type": {
                "id": 25,
                "uri": "http://localhost:3000/api/v1/consumable_types/25"
              },
              "kitchen": {
                "id": 25,
                "type": "Team",
                "name": "TEST TEAM"
              },
              "expiry_date": "2016-05-15",
              "ingredients": [
                {
                  "id": 13,
                  "consumable_type_id": 13,
                  "kitchen_id": 13,
                  "number": "FZ1914061",
                  "expiry_date": null,
                  "created_at": "2016-02-15T13:39:49.794Z",
                  "updated_at": "2016-02-15T13:39:49.794Z"
                },
                {
                  "id": 14,
                  "consumable_type_id": 14,
                  "kitchen_id": 14,
                  "number": "BATCH1007103",
                  "expiry_date": null,
                  "created_at": "2016-02-15T13:39:49.799Z",
                  "updated_at": "2016-02-15T13:39:49.799Z"
                }
              ],
              "consumables": [
                {
                  "id": 156,
                  "batch_id": 58,
                  "created_at": "2016-02-15T13:39:52.116Z",
                  "updated_at": "2016-02-15T13:39:52.116Z",
                  "name": null,
                  "barcode": "RGNT-156",
                  "depleted": false
                },
                {
                  "id": 157,
                  "batch_id": 58,
                  "created_at": "2016-02-15T13:39:52.124Z",
                  "updated_at": "2016-02-15T13:39:52.124Z",
                  "name": null,
                  "barcode": "RGNT-157",
                  "depleted": false
                },
              ]
            }
          ],
          "meta": {
            "current_page": 1,
            "next_page": 2,
            "prev_page": null,
            "total_pages": 2,
            "total_count": 30
          }
        }
  /{batch_id}:
    get:
      description: Retrieve a specific batch
      responses:
        200:
          body:
            application/json:
              example: |
                {
                  "id": 34,
                  "number": "TESTTEAM-34",
                  "consumable_type": {
                    "id": 1,
                    "uri": "http://localhost:3000/api/v1/consumable_types/1"
                  },
                  "kitchen": {
                    "id": 25,
                    "type": "Team",
                    "name": "TEST TEAM"
                  },
                  "expiry_date": "2016-03-19",
                  "ingredients": [{
                      id: 15,
                      consumable_type_id: 15,
                      kitchen_id: 15,
                      number: "1715661",
                      expiry_date: null,
                      created_at: "2016-02-15T13:39:49.805Z",
                      updated_at: "2016-02-15T13:39:49.805Z"
                    },
                    {
                      id: 16,
                      consumable_type_id: 16,
                      kitchen_id: 16,
                      number: "1672599",
                      expiry_date: null,
                      created_at: "2016-02-15T13:39:49.812Z",
                      updated_at: "2016-02-15T13:39:49.812Z"
                    }],
                  "consumables": [
                    {
                      "id": 1,
                      "batch_id": 34,
                      "created_at": "2016-02-15T13:39:49.973Z",
                      "updated_at": "2016-02-15T13:39:49.973Z",
                      "name": null,
                      "barcode": "RGNT-1",
                      "depleted": false
                    },
                    {
                      "id": 2,
                      "batch_id": 34,
                      "created_at": "2016-02-15T13:39:49.981Z",
                      "updated_at": "2016-02-15T13:39:49.981Z",
                      "name": null,
                      "barcode": "RGNT-2",
                      "depleted": false
                    },
                    {
                      "id": 3,
                      "batch_id": 34,
                      "created_at": "2016-02-15T13:39:49.987Z",
                      "updated_at": "2016-02-15T13:39:49.987Z",
                      "name": null,
                      "barcode": "RGNT-3",
                      "depleted": false
                    }
                  ]
                }
        404:
          body:
            application/json:
              example: |
                {
                  "message": "Couldn't find Batch with 'id'=123"
                }

/consumable_types:
  type:
    collection:
      exampleCollection: |
        {
          "consumable_types": [
            {
              "id": 1,
              "name": "IMDM",
              "days_to_keep": 33,
              "recipe_ingredients": []
            },
            {
              "id": 25,
              "name": "EPO",
              "days_to_keep": 90,
              "recipe_ingredients": [
                {
                  "id": 13,
                  "name": "Recombinant human EPO",
                  "days_to_keep": 490,
                  "created_at": "2016-02-15T13:39:49.328Z",
                  "updated_at": "2016-02-15T13:39:49.328Z"
                },
                {
                  "id": 14,
                  "name": "0.1% HSA in PBS",
                  "days_to_keep": 9,
                  "created_at": "2016-02-15T13:39:49.333Z",
                  "updated_at": "2016-02-15T13:39:49.333Z"
                }
              ]
            }
          ],
          "meta": {
            "current_page": 1,
            "next_page": 2,
            "prev_page": null,
            "total_pages": 2,
            "total_count": 30
          }
        }

  /{consumable_type_id}:
    get:
      description: Retrieve a specific consumable type
      responses:
        200:
          body:
            application/json:
              example: |
                {
                  "id": 25,
                  "name": "EPO",
                  "days_to_keep": 90,
                  "recipe_ingredients": [
                    {
                      "id": 13,
                      "name": "Recombinant human EPO",
                      "days_to_keep": 490,
                      "created_at": "2016-02-15T13:39:49.328Z",
                      "updated_at": "2016-02-15T13:39:49.328Z"
                    },
                    {
                      "id": 14,
                      "name": "0.1% HSA in PBS",
                      "days_to_keep": 9,
                      "created_at": "2016-02-15T13:39:49.333Z",
                      "updated_at": "2016-02-15T13:39:49.333Z"
                    }
                  ]
                }
        404:
          body:
            application/json:
              example: |
                {
                  "message": "Couldn't find ConsumableType with 'id'=123"
                }

/consumables:
  get:
    is: [pageable, sortable]
    queryParameters:
      barcode:
        type: string
        description: The barcode of a Consumable
        example: MX-100
        required: false
    description: Get a list of Consumables.
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "consumables": [
                  {
                    "id": 1,
                    "depleted": false,
                    "barcode": "RGNT-1",
                    "batch": {
                      "id": 34,
                      "uri": "http://localhost:3000/api/v1/batches/34"
                    },
                    "consumable_type": {
                      "id": 1,
                      "name": "IMDM",
                      "uri": "http://localhost:3000/api/v1/consumable_types/1"
                    }
                  },
                  {
                    "id": 25,
                    "depleted": false,
                    "barcode": "RGNT-25",
                    "batch": {
                      "id": 38,
                      "uri": "http://localhost:3000/api/v1/batches/38"
                    },
                    "consumable_type": {
                      "id": 5,
                      "name": "Insulin",
                      "uri": "http://localhost:3000/api/v1/consumable_types/5"
                    }
                  }
                ],
                "meta": {
                  "current_page": 1,
                  "next_page": 2,
                  "prev_page": null,
                  "total_pages": 8,
                  "total_count": 177
                }
              }

  /{consumable_id}:
    get:
      description: Retrieve a specific consumable
      responses:
        200:
          body:
            application/json:
              example: |
                {
                  "id": 25,
                  "depleted": false,
                  "barcode": "RGNT-25",
                  "batch": {
                    "id": 38,
                    "uri": "http://localhost:3000/api/v1/batches/38"
                  },
                  "consumable_type": {
                    "id": 5,
                    "name": "Insulin",
                    "uri": "http://localhost:3000/api/v1/consumable_types/5"
                  }
                }
        404:
          body:
            application/json:
              example: |
                {
                  "message": "Couldn't find Consumable"
                }

/lots:
  type:
    collection:
      exampleCollection: |
        {
          "lots": [
            {
              "id": 1,
              "number": "1695234",
              "consumable_type": {
                "id": 1,
                "uri": "http://localhost:3000/api/v1/consumable_types/1"
              },
              "kitchen": {
                "id": 1,
                "type": "Supplier",
                "name": "LIFE TECH 21980-032"
              }
            },
            {
              "id": 25,
              "number": "STBD6281V",
              "consumable_type": {
                "id": 17,
                "uri": "http://localhost:3000/api/v1/consumable_types/17"
              },
              "kitchen": {
                "id": 17,
                "type": "Supplier",
                "name": "SIGMA M6250-100ML"
              }
            }
          ],
          "meta": {
            "current_page": 1,
            "next_page": 2,
            "prev_page": null,
            "total_pages": 2,
            "total_count": 34
          }
        }
  /{lot_id}:
    get:
      description: Retrieve a specific lot
      responses:
        200:
          body:
            application/json:
              example: |
                {
                  "id": 25,
                  "number": "STBD6281V",
                  "consumable_type": {
                    "id": 17,
                    "uri": "http://localhost:3000/api/v1/consumable_types/17"
                  },
                  "kitchen": {
                    "id": 17,
                    "type": "Supplier",
                    "name": "SIGMA M6250-100ML"
                  }
                }
        404:
          body:
            application/json:
              example: |
                {
                  "message": "Couldn't find Lot with 'id'=123"
                }

/suppliers:
  type:
    collection:
      exampleCollection: |
        {
          "suppliers": [
            {
              "id": 1,
              "name": "LIFE TECH 21980-032"
            },
            {
              "id": 24,
              "name": "CAMBRIDGE UNIVERSITY"
            }
          ],
          "meta": {
            "current_page": 1,
            "next_page": null,
            "prev_page": null,
            "total_pages": 1,
            "total_count": 24
          }
        }
  /{supplier_id}:
    get:
      description: Retrieve a specific supplier
      responses:
        200:
          body:
            application/json:
              example: |
                {
                  id: 1,
                  name: "Acme Ltd."
                }
        404:
          body:
            application/json:
              example: |
                {
                  "message": "Couldn't find Supplier with 'id'=123"
                }